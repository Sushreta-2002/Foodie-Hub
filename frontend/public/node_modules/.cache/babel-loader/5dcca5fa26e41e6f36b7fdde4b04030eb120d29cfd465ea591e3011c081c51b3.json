{"ast":null,"code":"var _jsxFileName = \"D:\\\\Food-order\\\\frontend\\\\src\\\\hooks\\\\useCart.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { sample_foods } from '../data';\nimport cartItem from '../pages/Cart/CartPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(null);\nexport default function CartProvider({\n  children\n}) {\n  _s();\n  const [cartItems, setCartItems] = useState(sample_foods.slice(1, 4).map(food => ({\n    food,\n    quantity: 1,\n    price: food.price\n  })));\n  const [totalPrice, setTotalPrice] = useState(650.98);\n  const [totalCount, setTotalCount] = useState(3);\n  useEffect(() => {}, [cartItems]);\n  const sum = items => {\n    return items.reduce((prevValue, curValue) => prevValue + curValue, 0);\n  };\n  const removeFromCart = foodId => {\n    const filteredCartItems = cartItems.filter(item => item.food.id !== foodId);\n    setCartItems(filteredCartItems);\n  };\n  const changeQuantity = (cartItem, newQuantity) => {\n    const {\n      food\n    } = cartItem;\n    const changedCartItem = {\n      ...cartItem,\n      quantity: newQuantity,\n      price: food.price * newQuantity\n    };\n    setCartItems(cartItems.map(item => item.food.id === food.id ? changedCartItem : item));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: {\n        items: cartItems,\n        totalPrice,\n        totalCount\n      },\n      removeFromCart,\n      changeQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 11\n  }, this);\n}\n_s(CartProvider, \"tTGHzF/ViFRc4R+6aq0GbhNoK4o=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","sample_foods","cartItem","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","slice","map","food","quantity","price","totalPrice","setTotalPrice","totalCount","setTotalCount","sum","items","reduce","prevValue","curValue","removeFromCart","foodId","filteredCartItems","filter","item","id","changeQuantity","newQuantity","changedCartItem","Provider","value","cart","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["D:/Food-order/frontend/src/hooks/useCart.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { sample_foods } from '../data';\r\n\r\nimport cartItem from '../pages/Cart/CartPage';\r\n\r\nconst CartContext =createContext(null);\r\n\r\n\r\nexport default function CartProvider({children}) {\r\n    const[cartItems, setCartItems]= useState(\r\n        sample_foods.slice(1,4).map(food=>({food, quantity: 1, price: food.price}))\r\n    );\r\n    const[totalPrice, setTotalPrice] =useState(650.98);\r\n    const[totalCount, setTotalCount]=useState(3);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [cartItems]);\r\n    const sum= items =>{\r\n      return items.reduce((prevValue, curValue) => prevValue + curValue, 0);\r\n    };\r\n\r\n    const removeFromCart =foodId =>{\r\n      const filteredCartItems= cartItems.filter(item => item.food.id !== foodId);\r\n      setCartItems(filteredCartItems);\r\n    };\r\n\r\n    const changeQuantity =(cartItem, newQuantity) =>{\r\n      const {food} = cartItem;\r\n      const changedCartItem ={\r\n        ...cartItem,\r\n        quantity : newQuantity,\r\n        price: food.price * newQuantity,\r\n      };\r\n      setCartItems(\r\n        cartItems.map(item => (item.food.id === food.id ? changedCartItem : item))\r\n      );\r\n    };\r\n\r\n  return( <CartContext.Provider\r\n   value={{cart:{items : cartItems,totalPrice, totalCount},\r\n   removeFromCart, changeQuantity }}>\r\n    {children}\r\n  </CartContext.Provider>\r\n  );\r\n}\r\nexport const useCart = () => useContext(CartContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,YAAY,QAAQ,SAAS;AAEtC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,gBAAER,aAAa,CAAC,IAAI,CAAC;AAGtC,eAAe,SAASS,YAAYA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAK,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAEV,QAAQ,CACpCC,YAAY,CAACU,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,GAAG,CAACC,IAAI,KAAG;IAACA,IAAI;IAAEC,QAAQ,EAAE,CAAC;IAAEC,KAAK,EAAEF,IAAI,CAACE;EAAK,CAAC,CAAC,CAC9E,CAAC;EACD,MAAK,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAEjB,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAK,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAACnB,QAAQ,CAAC,CAAC,CAAC;EAE5CD,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,CAACU,SAAS,CAAC,CAAC;EACf,MAAMW,GAAG,GAAEC,KAAK,IAAG;IACjB,OAAOA,KAAK,CAACC,MAAM,CAAC,CAACC,SAAS,EAAEC,QAAQ,KAAKD,SAAS,GAAGC,QAAQ,EAAE,CAAC,CAAC;EACvE,CAAC;EAED,MAAMC,cAAc,GAAEC,MAAM,IAAG;IAC7B,MAAMC,iBAAiB,GAAElB,SAAS,CAACmB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAChB,IAAI,CAACiB,EAAE,KAAKJ,MAAM,CAAC;IAC1EhB,YAAY,CAACiB,iBAAiB,CAAC;EACjC,CAAC;EAED,MAAMI,cAAc,GAAEA,CAAC7B,QAAQ,EAAE8B,WAAW,KAAI;IAC9C,MAAM;MAACnB;IAAI,CAAC,GAAGX,QAAQ;IACvB,MAAM+B,eAAe,GAAE;MACrB,GAAG/B,QAAQ;MACXY,QAAQ,EAAGkB,WAAW;MACtBjB,KAAK,EAAEF,IAAI,CAACE,KAAK,GAAGiB;IACtB,CAAC;IACDtB,YAAY,CACVD,SAAS,CAACG,GAAG,CAACiB,IAAI,IAAKA,IAAI,CAAChB,IAAI,CAACiB,EAAE,KAAKjB,IAAI,CAACiB,EAAE,GAAGG,eAAe,GAAGJ,IAAK,CAC3E,CAAC;EACH,CAAC;EAEH,oBAAQzB,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAC5BC,KAAK,EAAE;MAACC,IAAI,EAAC;QAACf,KAAK,EAAGZ,SAAS;QAACO,UAAU;QAAEE;MAAU,CAAC;MACvDO,cAAc;MAAEM;IAAe,CAAE;IAAAxB,QAAA,EAC/BA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEzB;AAAChC,EAAA,CArCuBF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAsCpC,OAAO,MAAMoC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7C,UAAU,CAACO,WAAW,CAAC;AAAA;AAACsC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}